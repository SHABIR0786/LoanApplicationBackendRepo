// <auto-generated />
using System;
using LoanManagement.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanManagement.Migrations
{
    [DbContext(typeof(LoanManagementDbContext))]
    [Migration("20230217145752_initial_create")]
    partial class initial_create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Abp.Application.Editions.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("AbpEditions");
                });

            modelBuilder.Entity("Abp.Application.Features.FeatureSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FeatureSetting");
                });

            modelBuilder.Entity("Abp.Auditing.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ClientName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CustomData")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Exception")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("ExceptionMessage")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ImpersonatorTenantId")
                        .HasColumnType("int");

                    b.Property<long?>("ImpersonatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MethodName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Parameters")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("ReturnValue")
                        .HasColumnType("longtext");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionDuration");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpAuditLogs");
                });

            modelBuilder.Entity("Abp.Authorization.PermissionSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsGranted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpRoleClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserLinkId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress");

                    b.HasIndex("UserName");

                    b.HasIndex("TenantId", "EmailAddress");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "UserName");

                    b.ToTable("AbpUserAccounts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpUserClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ProviderKey", "TenantId")
                        .IsUnique();

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLoginAttempt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ClientName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Result")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("TenancyName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserNameOrEmailAddress")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "TenantId");

                    b.HasIndex("TenancyName", "UserNameOrEmailAddress", "Result");

                    b.ToTable("AbpUserLoginAttempts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserOrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "RoleId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserRoles");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserTokens");
                });

            modelBuilder.Entity("Abp.BackgroundJobs.BackgroundJobInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAbandoned")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasMaxLength(1048576)
                        .HasColumnType("longtext");

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<DateTime?>("LastTryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NextTryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Priority")
                        .HasColumnType("tinyint unsigned");

                    b.Property<short>("TryCount")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs");
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "Name", "UserId")
                        .IsUnique();

                    b.ToTable("AbpSettings");
                });

            modelBuilder.Entity("Abp.DynamicEntityProperties.DynamicEntityProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DynamicPropertyId")
                        .HasColumnType("int");

                    b.Property<string>("EntityFullName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DynamicPropertyId");

                    b.HasIndex("EntityFullName", "DynamicPropertyId", "TenantId")
                        .IsUnique();

                    b.ToTable("AbpDynamicEntityProperties");
                });

            modelBuilder.Entity("Abp.DynamicEntityProperties.DynamicEntityPropertyValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("DynamicEntityPropertyId")
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasColumnType("longtext");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DynamicEntityPropertyId");

                    b.ToTable("AbpDynamicEntityPropertyValues");
                });

            modelBuilder.Entity("Abp.DynamicEntityProperties.DynamicProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("InputType")
                        .HasColumnType("longtext");

                    b.Property<string>("Permission")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyName", "TenantId")
                        .IsUnique();

                    b.ToTable("AbpDynamicProperties");
                });

            modelBuilder.Entity("Abp.DynamicEntityProperties.DynamicPropertyValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("DynamicPropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DynamicPropertyId");

                    b.ToTable("AbpDynamicPropertyValues");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("ChangeType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<long>("EntityChangeSetId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntityId")
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("EntityTypeFullName")
                        .HasMaxLength(192)
                        .HasColumnType("varchar(192)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeSetId");

                    b.HasIndex("EntityTypeFullName", "EntityId");

                    b.ToTable("AbpEntityChanges");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChangeSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ClientName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExtensionData")
                        .HasColumnType("longtext");

                    b.Property<int?>("ImpersonatorTenantId")
                        .HasColumnType("int");

                    b.Property<long?>("ImpersonatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "CreationTime");

                    b.HasIndex("TenantId", "Reason");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpEntityChangeSets");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityPropertyChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("EntityChangeId")
                        .HasColumnType("bigint");

                    b.Property<string>("NewValue")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("NewValueHash")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginalValue")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("OriginalValueHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<string>("PropertyTypeFullName")
                        .HasMaxLength(192)
                        .HasColumnType("varchar(192)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeId");

                    b.ToTable("AbpEntityPropertyChanges");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Icon")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpLanguages");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguageText", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(67108864)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Source", "LanguageName", "Key");

                    b.ToTable("AbpLanguageTexts");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Data")
                        .HasMaxLength(1048576)
                        .HasColumnType("longtext");

                    b.Property<string>("DataTypeName")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("EntityId")
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ExcludedUserIds")
                        .HasMaxLength(131072)
                        .HasColumnType("longtext");

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<byte>("Severity")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("TenantIds")
                        .HasMaxLength(131072)
                        .HasColumnType("longtext");

                    b.Property<string>("UserIds")
                        .HasMaxLength(131072)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AbpNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationSubscriptionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntityId")
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NotificationName")
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.HasIndex("TenantId", "NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.ToTable("AbpNotificationSubscriptions");
                });

            modelBuilder.Entity("Abp.Notifications.TenantNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Data")
                        .HasMaxLength(1048576)
                        .HasColumnType("longtext");

                    b.Property<string>("DataTypeName")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("EntityId")
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<byte>("Severity")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AbpTenantNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.UserNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantNotificationId")
                        .HasColumnType("char(36)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "State", "CreationTime");

                    b.ToTable("AbpUserNotifications");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("varchar(95)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId", "Code");

                    b.ToTable("AbpOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnitRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "RoleId");

                    b.ToTable("AbpOrganizationUnitRoles");
                });

            modelBuilder.Entity("Abp.Webhooks.WebhookEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("WebhookName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AbpWebhookEvents");
                });

            modelBuilder.Entity("Abp.Webhooks.WebhookSendAttempt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Response")
                        .HasColumnType("longtext");

                    b.Property<int?>("ResponseStatusCode")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<Guid>("WebhookEventId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("WebhookSubscriptionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("WebhookEventId");

                    b.ToTable("AbpWebhookSendAttempts");
                });

            modelBuilder.Entity("Abp.Webhooks.WebhookSubscriptionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Headers")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("WebhookUri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Webhooks")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AbpWebhookSubscriptions");
                });

            modelBuilder.Entity("LoanManagement.Authorization.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedName");

                    b.ToTable("AbpRoles");
                });

            modelBuilder.Entity("LoanManagement.Authorization.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AuthenticationSource")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("EmailConfirmationCode")
                        .HasMaxLength(328)
                        .HasColumnType("varchar(328)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("NormalizedEmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PasswordResetCode")
                        .HasMaxLength(328)
                        .HasColumnType("varchar(328)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedEmailAddress");

                    b.HasIndex("TenantId", "NormalizedUserName");

                    b.ToTable("AbpUsers");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Additionaldetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("NameOfIndividualsCoBorrowerOnTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("NameOfIndividualsOnTitle")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Additionaldetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Additionalincome", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("BorrowerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IncomeSourceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoanApplicationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerTypeId");

                    b.HasIndex("IncomeSourceId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Additionalincomes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("longtext");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("longtext");

                    b.Property<string>("AddressType")
                        .HasColumnType("longtext");

                    b.Property<int>("BorrowerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Months")
                        .HasColumnType("int");

                    b.Property<long>("PersonalDetailId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("Years")
                        .HasColumnType("int");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerTypeId");

                    b.HasIndex("PersonalDetailId");

                    b.HasIndex("StateId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminDisclosure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Admindisclosures");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoanapplicationdocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DisclosureId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DisclosureId");

                    b.HasIndex("LoanId");

                    b.ToTable("AdminLoanapplicationdocuments");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoandetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BorrowerName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("InterestRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("LoanAmount")
                        .HasColumnType("float");

                    b.Property<int>("LoanApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("LoanNo")
                        .HasColumnType("longtext");

                    b.Property<int>("LoanProgramId")
                        .HasColumnType("int");

                    b.Property<string>("LoanPurpose")
                        .HasColumnType("longtext");

                    b.Property<string>("MortageConsultant")
                        .HasColumnType("longtext");

                    b.Property<string>("NmlsId")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RateLockDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RateLockExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("LoanProgramId");

                    b.ToTable("AdminLoandetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoanprogram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoanProgram")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AdminLoanprograms");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoanstatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("admin_loanstatus");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoansummarystatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("StatusId");

                    b.ToTable("AdminLoansummarystatuses");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminUserenableddevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BioMetricData")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsEnabled")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AdminUserenableddevices");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AgencyCaseNoB2")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreditTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Initials")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoanNoIdentifierB1B3")
                        .HasColumnType("longtext");

                    b.Property<int?>("TotalBorrowers1a6")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreditTypeId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationAdditionalEmployementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmployerBusinessName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsEmployedBySomeone")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsOwnershipLessThan25")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsSelfEmployed")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("MonthlyIncome")
                        .HasColumnType("float");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("PositionTitle")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<long?>("StateId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext");

                    b.Property<int?>("WorkingMonths")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingYears")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId1");

                    b.ToTable("ApplicationAdditionalEmployementDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationAdditionalEmployementIncomeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float?>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ApplicationAdditionalEmployementDetails")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationAdditionalEmployementDetailsNavigationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IncomeTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationAdditionalEmployementDetailsNavigationId");

                    b.HasIndex("IncomeTypeId");

                    b.ToTable("ApplicationAdditionalEmployementIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationDeclarationQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DeclarationQuestionId")
                        .HasColumnType("int");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description5a")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<ulong?>("YesNo")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("DeclarationQuestionId");

                    b.ToTable("ApplicationDeclarationQuestions");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationEmployementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<int>("CityId1b43")
                        .HasColumnType("int");

                    b.Property<int?>("CityId1b43NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId1b46")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId1b46NavigationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmployerBusinessName1b2")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsEmployedBySomeone1b8")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsOwnershipLessThan251b91")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsSelfEmployed1b9")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("MonthlyIncome1b92")
                        .HasColumnType("float");

                    b.Property<string>("Phone1b3")
                        .HasColumnType("longtext");

                    b.Property<string>("PositionTitle1b5")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate1b6")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StateId1b44")
                        .HasColumnType("int");

                    b.Property<long?>("StateId1b44NavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Street1b41")
                        .HasColumnType("longtext");

                    b.Property<string>("Unit1b42")
                        .HasColumnType("longtext");

                    b.Property<int?>("WorkingMonths")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingYears1b7")
                        .HasColumnType("int");

                    b.Property<string>("Zip1b45")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("CityId1b43NavigationId");

                    b.HasIndex("CountryId1b46NavigationId");

                    b.HasIndex("StateId1b44NavigationId");

                    b.ToTable("ApplicationEmployementDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationEmployementIncomeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float?>("Amount1b10")
                        .HasColumnType("float");

                    b.Property<int>("ApplicationEmployementDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IncomeTypeId1b101")
                        .HasColumnType("int");

                    b.Property<int?>("IncomeTypeId1b101NavigationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEmployementDetailsId");

                    b.HasIndex("IncomeTypeId1b101NavigationId");

                    b.ToTable("ApplicationEmployementIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber2a3")
                        .HasColumnType("longtext");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FinancialAccountTypeId2a1")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialAccountTypeId2a1NavigationId")
                        .HasColumnType("int");

                    b.Property<string>("FinancialInstitution2a2")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("Value2a4")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("FinancialAccountTypeId2a1NavigationId");

                    b.ToTable("ApplicationFinancialAssets");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialLaibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber2c3")
                        .HasColumnType("longtext");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName2c2")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FinancialLaibilitiesType2c1")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialLaibilitiesType2c1NavigationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("MonthlyValue2c6")
                        .HasColumnType("float");

                    b.Property<ulong?>("PaidOff2c5")
                        .HasColumnType("bigint unsigned");

                    b.Property<float?>("UnpaidBalance2c4")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("FinancialLaibilitiesType2c1NavigationId");

                    b.ToTable("ApplicationFinancialLaibilities");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialOtherAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FinancialAssetsTypesId2b1")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialAssetsTypesId2b1NavigationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("Value2b2")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("FinancialAssetsTypesId2b1NavigationId");

                    b.ToTable("ApplicationFinancialOtherAssets");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialOtherLaibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FinancialOtherLaibilitiesTypeId2d1")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialOtherLaibilitiesTypeId2d1NavigationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("MonthlyPayment2d2")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("FinancialOtherLaibilitiesTypeId2d1NavigationId");

                    b.ToTable("ApplicationFinancialOtherLaibilities");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialRealEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<int>("CityId3a23")
                        .HasColumnType("int");

                    b.Property<int?>("CityId3a23NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId3a26")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId3a26NavigationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FinancialPropertyIntendedOccupancyId3a5")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialPropertyIntendedOccupancyId3a5NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialPropertyStatusId3a4")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialPropertyStatusId3a4NavigationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("MonthlyMortagePayment3a6")
                        .HasColumnType("float");

                    b.Property<float?>("MonthlyRentalIncome3a7")
                        .HasColumnType("float");

                    b.Property<float?>("NetMonthlyRentalIncome3a8")
                        .HasColumnType("float");

                    b.Property<float?>("PropertyValue3a3")
                        .HasColumnType("float");

                    b.Property<int>("StateId3a24")
                        .HasColumnType("int");

                    b.Property<long?>("StateId3a24NavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Street3a21")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitNo3a22")
                        .HasColumnType("longtext");

                    b.Property<string>("Zip3a25")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("CityId3a23NavigationId");

                    b.HasIndex("CountryId3a26NavigationId");

                    b.HasIndex("FinancialPropertyIntendedOccupancyId3a5NavigationId");

                    b.HasIndex("FinancialPropertyStatusId3a4NavigationId");

                    b.HasIndex("StateId3a24NavigationId");

                    b.ToTable("ApplicationFinancialRealEstates");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationIncomeSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float?>("Amount1e2")
                        .HasColumnType("float");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IncomeSourceId1e1")
                        .HasColumnType("int");

                    b.Property<int?>("IncomeSourceId1e1NavigationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("IncomeSourceId1e1NavigationId");

                    b.ToTable("ApplicationIncomeSources");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ages1a81")
                        .HasColumnType("longtext");

                    b.Property<string>("AlternateFirstName1a21")
                        .HasColumnType("longtext");

                    b.Property<string>("AlternateLastName1a23")
                        .HasColumnType("longtext");

                    b.Property<string>("AlternateMiddleName1a22")
                        .HasColumnType("longtext");

                    b.Property<string>("AlternateSuffix1a24")
                        .HasColumnType("longtext");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("CellPhone1a10")
                        .HasColumnType("longtext");

                    b.Property<int>("CitizenshipTypeId1a5")
                        .HasColumnType("int");

                    b.Property<int?>("CitizenshipTypeId1a5NavigationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("CurrentCityId1a133")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentCityId1a133NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentCountryId1a136")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentCountryId1a136NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentHousingTypeId1a141")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentHousingTypeId1a141NavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentMonths1a15")
                        .HasColumnType("int");

                    b.Property<float?>("CurrentRent1a142")
                        .HasColumnType("float");

                    b.Property<int>("CurrentStateId1a134")
                        .HasColumnType("int");

                    b.Property<long?>("CurrentStateId1a134NavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrentStreet1a131")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentUnit1a132")
                        .HasColumnType("longtext");

                    b.Property<int?>("CurrentYears1a14")
                        .HasColumnType("int");

                    b.Property<string>("CurrentZip1a135")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Dependents1a8")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dob1a4")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email1a12")
                        .HasColumnType("longtext");

                    b.Property<string>("Ext1a111")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName1a1")
                        .HasColumnType("longtext");

                    b.Property<int>("FormerCityId1a153")
                        .HasColumnType("int");

                    b.Property<int?>("FormerCityId1a153NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("FormerCountryId1a156")
                        .HasColumnType("int");

                    b.Property<int?>("FormerCountryId1a156NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("FormerHousingTypeId1a161")
                        .HasColumnType("int");

                    b.Property<int?>("FormerHousingTypeId1a161NavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("FormerMonths1a161")
                        .HasColumnType("int");

                    b.Property<float?>("FormerRent1a162")
                        .HasColumnType("float");

                    b.Property<int>("FormerStateId1a154")
                        .HasColumnType("int");

                    b.Property<long?>("FormerStateId1a154NavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("FormerStreet1a151")
                        .HasColumnType("longtext");

                    b.Property<string>("FormerUnit1a152")
                        .HasColumnType("longtext");

                    b.Property<int?>("FormerYears1a16")
                        .HasColumnType("int");

                    b.Property<string>("FormerZip1a155")
                        .HasColumnType("longtext");

                    b.Property<string>("HomePhone1a9")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName1a3")
                        .HasColumnType("longtext");

                    b.Property<int>("MailingCityId1a173")
                        .HasColumnType("int");

                    b.Property<int?>("MailingCityId1a173NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("MailingCountryId1a176")
                        .HasColumnType("int");

                    b.Property<int?>("MailingCountryId1a176NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("MailingStateId1a174")
                        .HasColumnType("int");

                    b.Property<long?>("MailingStateId1a174NavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("MailingStreet1a171")
                        .HasColumnType("longtext");

                    b.Property<string>("MailingUnit1a172")
                        .HasColumnType("longtext");

                    b.Property<string>("MailingZip1a175")
                        .HasColumnType("longtext");

                    b.Property<int>("MaritialStatusId1a7")
                        .HasColumnType("int");

                    b.Property<int?>("MaritialStatusId1a7NavigationId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName1a2")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssn1a3")
                        .HasColumnType("longtext");

                    b.Property<string>("Suffix1a4")
                        .HasColumnType("longtext");

                    b.Property<string>("WorkPhone1a11")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("CitizenshipTypeId1a5NavigationId");

                    b.HasIndex("CurrentCityId1a133NavigationId");

                    b.HasIndex("CurrentCountryId1a136NavigationId");

                    b.HasIndex("CurrentHousingTypeId1a141NavigationId");

                    b.HasIndex("CurrentStateId1a134NavigationId");

                    b.HasIndex("FormerCityId1a153NavigationId");

                    b.HasIndex("FormerCountryId1a156NavigationId");

                    b.HasIndex("FormerHousingTypeId1a161NavigationId");

                    b.HasIndex("FormerStateId1a154NavigationId");

                    b.HasIndex("MailingCityId1a173NavigationId");

                    b.HasIndex("MailingCountryId1a176NavigationId");

                    b.HasIndex("MailingStateId1a174NavigationId");

                    b.HasIndex("MaritialStatusId1a7NavigationId");

                    b.ToTable("ApplicationPersonalInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationPreviousEmployementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<int>("CityId1d33")
                        .HasColumnType("int");

                    b.Property<int?>("CityId1d33NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId1d36")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId1d36NavigationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmployerBusinessName1d2")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EndDate1d6")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("GrossMonthlyIncome1d8")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsSelfEmployed1d7")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("PositionTitle1d4")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate1d5")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StateId1d34")
                        .HasColumnType("int");

                    b.Property<long?>("StateId1d34NavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Street1d31")
                        .HasColumnType("longtext");

                    b.Property<string>("Unit1d32")
                        .HasColumnType("longtext");

                    b.Property<string>("Zip1d35")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("CityId1d33NavigationId");

                    b.HasIndex("CountryId1d36NavigationId");

                    b.HasIndex("StateId1d34NavigationId");

                    b.ToTable("ApplicationPreviousEmployementDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Assettype", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Assettypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9759),
                            IsDeleted = false,
                            Name = "Cash deposit on sales contract"
                        },
                        new
                        {
                            Id = 2L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9775),
                            IsDeleted = false,
                            Name = "Certificate of Deposit"
                        },
                        new
                        {
                            Id = 3L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9777),
                            IsDeleted = false,
                            Name = "Checking Account"
                        },
                        new
                        {
                            Id = 4L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9778),
                            IsDeleted = false,
                            Name = "Gifts"
                        },
                        new
                        {
                            Id = 5L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9779),
                            IsDeleted = false,
                            Name = "Gift of equity"
                        },
                        new
                        {
                            Id = 6L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9781),
                            IsDeleted = false,
                            Name = "Money Market Fund"
                        },
                        new
                        {
                            Id = 7L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9782),
                            IsDeleted = false,
                            Name = "Mutual Funds"
                        },
                        new
                        {
                            Id = 8L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9783),
                            IsDeleted = false,
                            Name = "Net Proceeds from Real Estate Funds"
                        },
                        new
                        {
                            Id = 9L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9792),
                            IsDeleted = false,
                            Name = "Real Estate Owned"
                        },
                        new
                        {
                            Id = 10L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9794),
                            IsDeleted = false,
                            Name = "Retirement Funds"
                        },
                        new
                        {
                            Id = 11L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9795),
                            IsDeleted = false,
                            Name = "Savings Account"
                        },
                        new
                        {
                            Id = 12L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9796),
                            IsDeleted = false,
                            Name = "Stocks & Bonds"
                        },
                        new
                        {
                            Id = 13L,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 640, DateTimeKind.Local).AddTicks(9797),
                            IsDeleted = false,
                            Name = "Trust Account"
                        });
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Borrower", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("BorrowerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CellPhone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("HomePhone")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleInitial")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumberOfDependents")
                        .HasColumnType("int");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Suffix")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerTypeId");

                    b.ToTable("Borrowers");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Borroweremploymentinformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("BorrowerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmployersAddress1")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployersAddress2")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployersName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsSelfEmployed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoanApplicationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerTypeId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Borroweremploymentinformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Borrowermonthlyincome", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Base")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Bonuses")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("BorrowerTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commissions")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Dividends")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoanApplicationId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Overtime")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerTypeId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Borrowermonthlyincomes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Borrowertype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Borrowertypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Borrower"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Co-Borrower"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Both"
                        });
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.CitizenshipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CitizenshipType1")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CitizenshipTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<long?>("StateId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId1");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Consentdetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool?>("AgreeEconsent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("CoborrowerAgreeEconsent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CoborrowerEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("CoborrowerFirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("CoborrowerLastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Consentdetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.CountryState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("StateName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryStates");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Creditauthagreement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool?>("AgreeCreditAuthAgreement")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Creditauthagreements");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.CreditType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreditType1")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CreditTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Declaration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("BorrowerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeclarationsSection")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsAnyPartOfTheDownPayment")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCoMakerOrEndorser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDeclaredBankrupt")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsIntendToOccupyThePropertyAsYourPrimary")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsObligatedOnAnyLoanWhichResultedForeclosure")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsObligatedToPayAlimonyChildSupport")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOutstandingJudgmentsAgainstYou")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOwnershipInterestInPropertyInTheLastThreeYears")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPartyToLawsuit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPermanentResidentSlien")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPresentlyDelinquent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPropertyForeClosedUponOrGivenTitle")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsUscitizen")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoanApplicationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerTypeId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Declarations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Declarationborroweredemographicsinformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("BorrowerTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("CanNotProvideEthnic")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("CanNotProvideRace")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("CanNotProvideSex")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnterRace")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsAmericanIndianOrAlaskaNative")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsAsian")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsAsianIndian")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsBlackOrAfricanAmerican")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsChinese")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCuban")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsFemale")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsFilipino")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsGuamanianOrChamorro")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsHispanicOrLatino")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsJapanese")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsKorean")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMale")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMexican")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsNativeHawaiian")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsNativeHawaiianOrOtherPacificIslander")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsNotHispanicOrLatino")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOtherAsian")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOtherHispanicOrLatino")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOtherPacificIslander")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPuertoRican")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsSamoan")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsVietnamese")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsWhite")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoanApplicationId")
                        .HasColumnType("bigint");

                    b.Property<string>("NameOfEnrolledOrPrincipalTribe")
                        .HasColumnType("longtext");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerTypeId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Declarationborroweredemographicsinformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DeclarationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeclarationCategory1")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DeclarationCategories");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DeclarationQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DeclarationCategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong?>("IsActive")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ParentQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DeclarationCategoryId");

                    b.ToTable("DeclarationQuestions");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DemographicInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DemographicInfoSourceId87")
                        .HasColumnType("int");

                    b.Property<int?>("DemographicInfoSourceId87NavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Ethnicity81")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender82")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsEthnicityByObservation84")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsGenderByObservation85")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsRaceByObservation86")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Race83")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPersonalInformationId");

                    b.HasIndex("DemographicInfoSourceId87NavigationId");

                    b.ToTable("DemographicInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DemographicInfoSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DemographicInfoSources");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Expense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("FirstMortgage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HazardInsurance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HomeOwnersAssociation")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsLiveWithFamilySelectRent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MortgageInsurance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("OtherHousingExpenses")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("RealEstateTaxes")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Rent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SecondMortgage")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialAccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinancialAccountType1")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FinancialAccountTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialAssetsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FinancialCreditType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FinancialAssetsTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialLaibilitiesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinancialLaibilitiesType1")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FinancialLaibilitiesTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialOtherLaibilitiesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinancialOtherLaibilitiesType1")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FinancialOtherLaibilitiesTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialPropertyIntendedOccupancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinancialPropertyIntendedOccupancy1")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FinancialPropertyIntendedOccupancies");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialPropertyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinancialPropertyStatus1")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FinancialPropertyStatuses");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Homebuying", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool?>("BankruptcyPastThreeYears")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrentlyEmployed")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("DownPayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("FirstTimeHomeBuying")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("ForeclosurePastTwoYears")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HouseHoldIncome")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("LateMortgagePayments")
                        .HasColumnType("longtext");

                    b.Property<bool?>("MilitarySevice")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PlanToPurchase")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ProofOfincome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PropertyLocated")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyType")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyUse")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RateCredit")
                        .HasColumnType("longtext");

                    b.Property<string>("RefferedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Homebuyings");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.HousingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HousingType1")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HousingTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.IncomeSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IncomeSource1")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("IncomeSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 641, DateTimeKind.Local).AddTicks(27),
                            IncomeSource1 = "Accessory Unit Income",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 641, DateTimeKind.Local).AddTicks(32),
                            IncomeSource1 = "Alimony/Child Support",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 641, DateTimeKind.Local).AddTicks(33),
                            IncomeSource1 = "Automobile/Expense Account",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 641, DateTimeKind.Local).AddTicks(34),
                            IncomeSource1 = "Boarder Income",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Incomesource1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Incomesources1");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.IncomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IncomeType1")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("IncomeTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadApplicationDetailPurchasing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CitizenshipId")
                        .HasColumnType("int");

                    b.Property<string>("ConformSsn")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ContractClosingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ContractType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreditScore")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentCity")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentMilitaryStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentReantingType")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CurrentStartLivingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrentStateId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentUnit")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentZipCode")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("DownPaymentAmount")
                        .HasColumnType("float");

                    b.Property<float?>("DownPaymentPercentage")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedAnnualHomeInsurance")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedAnnualTax")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedHomePrice")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedMonthlyExpenses")
                        .HasColumnType("float");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Etsdate")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong?>("IsApplyOwn")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsCertify")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsEmployementHistory")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsEtsdateinYear")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsMilitaryMember")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsOtherSourceOfIncome")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsReadEconsent")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsReadThirdPartyConsent")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsSomeOneRefer")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsValoanPreviously")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsWorkingWithEzalready")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MaritialStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("MilitaryBranch")
                        .HasColumnType("longtext");

                    b.Property<float?>("MonthlyHoadues")
                        .HasColumnType("float");

                    b.Property<string>("NewHomeAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("NewHomeCity")
                        .HasColumnType("longtext");

                    b.Property<int>("NewHomeStateId")
                        .HasColumnType("int");

                    b.Property<string>("NewHomeUnit")
                        .HasColumnType("longtext");

                    b.Property<string>("NewHomeZipCode")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumberOfDependents")
                        .HasColumnType("int");

                    b.Property<string>("PersonalEmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalLegalFirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalLegalLastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalMiddleInitial")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalPassword")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyEmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyLegalFirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyLegalLastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyMiddleInitial")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Race")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Stage")
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfHome")
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfNewHome")
                        .HasColumnType("longtext");

                    b.Property<string>("WhoLivingInHome")
                        .HasColumnType("longtext");

                    b.Property<string>("WorkingOfficerName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LeadApplicationDetailPurchasings");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadApplicationDetailRefinancing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CitizenshipId")
                        .HasColumnType("int");

                    b.Property<string>("ConformSsn")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreditScore")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentCity")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentMilitaryStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentReantingType")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CurrentStartLivingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrentStateId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentUnit")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentZipCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentlyUsingHomeAs")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("EstimatedAnnualHomeInsurance")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedAnnualTax")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedMonthlyExpenses")
                        .HasColumnType("float");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Etsdate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FirstDependantAge")
                        .HasColumnType("int");

                    b.Property<ulong?>("IsAddressSameAsPrimaryBorrower")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsApplyOwn")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsCertify")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsCoBorrowerHaveShareIncome")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsCurrentlyLivingOnRefinancingProperty")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsEmployementHistory")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsEtsdateinYear")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsLegalSpouse")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsMilitaryMember")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsReadEconsent")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsReadThirdPartyConsent")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsSomeoneRefer")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsValoanPreviously")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsWorkingWithEzalready")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MaritialStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("MilitaryBranch")
                        .HasColumnType("longtext");

                    b.Property<float?>("MonthlyHoadues")
                        .HasColumnType("float");

                    b.Property<float?>("NewLoanEstimateAmount")
                        .HasColumnType("float");

                    b.Property<int?>("NumberOfDependents")
                        .HasColumnType("int");

                    b.Property<string>("ObjectiveReason")
                        .HasColumnType("longtext");

                    b.Property<float?>("OrignalPurchasedPrice")
                        .HasColumnType("float");

                    b.Property<string>("PersonalAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalCity")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalEmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalLegalFirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalLegalLastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalMiddleInitial")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalPassword")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalReantingType")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PersonalStartLivingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PersonalStateId")
                        .HasColumnType("int");

                    b.Property<string>("PersonalUnit")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonalZipCode")
                        .HasColumnType("longtext");

                    b.Property<float?>("PropertCashOutAmount")
                        .HasColumnType("float");

                    b.Property<string>("PropertyAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyCity")
                        .HasColumnType("longtext");

                    b.Property<int>("PropertyCountryId")
                        .HasColumnType("int");

                    b.Property<string>("PropertyEmailAddress")
                        .HasColumnType("longtext");

                    b.Property<float?>("PropertyEstimatedValue")
                        .HasColumnType("float");

                    b.Property<string>("PropertyLegalFirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyLegalLastName")
                        .HasColumnType("longtext");

                    b.Property<float?>("PropertyLoanBalance")
                        .HasColumnType("float");

                    b.Property<string>("PropertyMiddleInitial")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyPassword")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("PropertyStateId")
                        .HasColumnType("int");

                    b.Property<string>("PropertyUnit")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyZip")
                        .HasColumnType("longtext");

                    b.Property<string>("Race")
                        .HasColumnType("longtext");

                    b.Property<string>("RefferedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfHome")
                        .HasColumnType("longtext");

                    b.Property<string>("WhoLivingInHome")
                        .HasColumnType("longtext");

                    b.Property<string>("WorkingOfficerName")
                        .HasColumnType("longtext");

                    b.Property<float?>("YearHomePurchased")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("LeadApplicationDetailRefinancings");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadApplicationQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Question")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LeadApplicationQuestions");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicationType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LeadApplicationTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadAssetsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<float?>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinancialInstitution")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("LeadApplicationDetailPurchasingId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadApplicationDetailRefinancingId")
                        .HasColumnType("int");

                    b.Property<int>("LeadApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeadAssetsDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadAssetsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AssetsType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LeadAssetsTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadEmployementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployementAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployementCity")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployementSuite")
                        .HasColumnType("longtext");

                    b.Property<int>("EmployementTaxeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployementZip")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployerName")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployerPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<float?>("EstimatedAnnualBaseSalary")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedAnnualBonus")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedAnnualCommission")
                        .HasColumnType("float");

                    b.Property<float?>("EstimatedAnnualOvertime")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EstimatedStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong?>("IsCoBorrower")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsCurrentJob")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LeadApplicationDetailPurchasingId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadApplicationDetailRefinancingId")
                        .HasColumnType("int");

                    b.Property<int>("LeadApplicationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeadEmployementDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadEmployementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmployementType")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LeadEmployementTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadIncomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IncomeType")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LeadIncomeTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadOwnerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("OwnerType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LeadOwnerTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadQuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsYes")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("LeadApplicationDetailPurchasingId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadApplicationDetailRefinancingId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeadQuestionAnswers");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadRefinancingIncomeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IncomeTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LeadApplicationDetailRefinancingId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<float?>("MonthlyAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("LeadRefinancingIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LeadTaxesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxesType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LeadTaxesTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LoanAndPropertyInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<int>("CityId4a33")
                        .HasColumnType("int");

                    b.Property<int>("CountryId4a36")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong?>("FhaSecondaryResidance4a61")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("IsManufacturedHome4a8")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("IsMixedUseProperty4a7")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("LoanAmount4a1")
                        .HasColumnType("float");

                    b.Property<int?>("LoanPropertyOccupancyId4a6")
                        .HasColumnType("int");

                    b.Property<string>("LoanPurpose4a2")
                        .HasColumnType("longtext");

                    b.Property<int?>("PropertyNumberUnits4a4")
                        .HasColumnType("int");

                    b.Property<string>("PropertyStreet4a31")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyUnitNo4a32")
                        .HasColumnType("longtext");

                    b.Property<float?>("PropertyValue4a5")
                        .HasColumnType("float");

                    b.Property<string>("PropertyZip4a35")
                        .HasColumnType("longtext");

                    b.Property<int>("StateId4a34")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoanAndPropertyInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LoanAndPropertyInformationGift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong?>("Deposited4d2")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LoanPropertyGiftTypeId4d1")
                        .HasColumnType("int");

                    b.Property<string>("Source4d3")
                        .HasColumnType("longtext");

                    b.Property<float?>("Value4d4")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("LoanAndPropertyInformationGifts");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LoanAndPropertyInformationOtherMortageLoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("CreditAmount4b5")
                        .HasColumnType("float");

                    b.Property<string>("CreditorName4b1")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LienType4b2")
                        .HasColumnType("longtext");

                    b.Property<float?>("LoanAmount4b4")
                        .HasColumnType("float");

                    b.Property<float?>("MonthlyPayment4b3")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("LoanAndPropertyInformationOtherMortageLoans");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LoanAndPropertyInformationRentalIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("ExpectedMonthlyIncome4c1")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("LenderExpectedMonthlyIncome4c2")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("LoanAndPropertyInformationRentalIncomes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Loanapplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("AdditionalDetailId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConsentDetailId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreditAuthAgreementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LoanDetailId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PersonalDetailId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalDetailId");

                    b.HasIndex("ConsentDetailId");

                    b.HasIndex("CreditAuthAgreementId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("LoanDetailId");

                    b.HasIndex("PersonalDetailId")
                        .IsUnique();

                    b.ToTable("Loanapplications");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Loandetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CurrentLoanAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("DownPaymentAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double?>("DownPaymentPercentage")
                        .HasColumnType("double");

                    b.Property<decimal?>("EstimatedPurchasePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("EstimatedValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("GiftAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("GiftExplanation")
                        .HasColumnType("longtext");

                    b.Property<bool?>("HaveSecondMortgage")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsWorkingWithOfficer")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LoanOfficerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OriginalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("PayLoanWithNewLoan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PropertyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyUseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurposeOfLoan")
                        .HasColumnType("int");

                    b.Property<string>("ReferredBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("RefinancingCurrentHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("RequestedLoanAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SecondMortgageAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("SourceOfDownPayment")
                        .HasColumnType("int");

                    b.Property<bool?>("StartedLookingForNewHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("YearAcquired")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Loandetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LoanOriginatorInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address92")
                        .HasColumnType("longtext");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Date910")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email98")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationName91")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationNmlsrId93")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationStateLicence94")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginatorName95")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginatorNmlsrId96")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginatorStateLicense97")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone99")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LoanOriginatorInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LoanPropertyGiftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoanPropertyGiftType1")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LoanPropertyGiftTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.LoanPropertyOccupancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoanPropertyOccupancy1")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LoanPropertyOccupancies");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Manualassetentry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Address2")
                        .HasColumnType("longtext");

                    b.Property<long>("AssetTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("longtext");

                    b.Property<int>("BorrowerTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CashValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("GrossRentalIncome")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoanApplicationId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MonthlyMortgagePayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("OutstandingMortgageBalance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PresentMarketValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PropertyIsUsedAs")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyType")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxesInsuranceAndOther")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("BorrowerTypeId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("StateId");

                    b.ToTable("Manualassetentries");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.MaritialStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MaritialStatus1")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MaritialStatuses");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.MilitaryService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationPersonalInformationId")
                        .HasColumnType("int");

                    b.Property<ulong?>("CurrentlyServing7a2")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("DateOfServiceExpiration7a3")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong?>("NonActivatedMember7a2")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("Retired7a2")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("ServedInForces7a1")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("SurvivingSpouse7a21")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("MilitaryServices");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.MortageLoanOnProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber3a10")
                        .HasColumnType("longtext");

                    b.Property<int?>("ApplicationFinancialRealEstateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("CreditLimit3a15")
                        .HasColumnType("float");

                    b.Property<string>("CreditorName3a9")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<float?>("MonthlyMortagePayment3a11")
                        .HasColumnType("float");

                    b.Property<int>("MortageLoanTypesId3a14")
                        .HasColumnType("int");

                    b.Property<ulong?>("PaidOff3a13")
                        .HasColumnType("bigint unsigned");

                    b.Property<float?>("UnpaidBalance3a12")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MortageLoanOnProperties");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.MortageLoanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MortageLoanTypesId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MortageLoanTypes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Personaldetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool?>("AgreePrivacyPolicy")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("BorrowerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CoBorrowerId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("CoBorrowerIsMailingAddressSameAsResidential")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("CoBorrowerResidentialAddressSameAsBorrowerResidential")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsApplyingWithCoBorrower")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMailingAddressSameAsResidential")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("UseIncomeOfPersonOtherThanBorrower")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("CoBorrowerId");

                    b.ToTable("Personaldetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Refinancehomebuying", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool?>("BankruptcyPastThreeYears")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("CashBorrow")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrentEmployed")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentlyEmployed")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Fhaloan")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ForeclosurePastTwoYears")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("HomePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("HouseHoldIncome")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("LateMortgagePayments")
                        .HasColumnType("longtext");

                    b.Property<bool?>("MilitarySevice")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("Owe")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ProofOfincome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PropertyLocated")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyType")
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyUse")
                        .HasColumnType("longtext");

                    b.Property<string>("RateCredit")
                        .HasColumnType("longtext");

                    b.Property<string>("RefferedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("WantRefinance")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Refinancehomebuyings");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Sitesetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("PageIdentifier")
                        .HasColumnType("longtext");

                    b.Property<string>("PageName")
                        .HasColumnType("longtext");

                    b.Property<string>("PageSetting")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sitesettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2023, 2, 17, 20, 27, 51, 641, DateTimeKind.Local).AddTicks(71),
                            IsDeleted = false,
                            PageIdentifier = "app/home",
                            PageName = "Home page",
                            PageSetting = "{\"MainCarousels\":[{\"FilePath\":\"assets/img/house.png\",\"Header\":\"Best California Home Loans\",\"SubHeader\":\"Better Rate then banks, Better customer services\"}],\"FirstBlog\":{\"FilePath\":\"assets/img/house.png\",\"Header\":\"GET A NO-HASSLE LOAN FOR UP TO $697,650\",\"SubHeader\":\"Fast Closing FHA Loans\",\"Description\":\"Take Advantage of our FHA Elite Rates starting at\"},\"SecondBlog\":{\"FilePath\":\"assets/img/living-room.png\",\"Header\":\"Conventional Jombo Rate\",\"SubHeader\":\"GET A NO-HASSLE LOAN FOR UP TO $697,650\",\"Description\":\"Save cash with a low-rate conventional loan up to\"},\"ThirdBlog\":{\"FilePath\":\"assets/img/money.png\",\"Header\":\"Tap Into Your Equity\",\"SubHeader\":\"\",\"Description\":\"We offer unique programs that let you refinance up\"},\"ForthBlog\":{\"FilePath\":\"assets/img/new-home.png\",\"Header\":\"Purchase Your Dream Home\",\"SubHeader\":\"\",\"Description\":\"Your dream home may no longer be a dream\"},\"VideoSection\":{\"FilePath\":\"assets/img/Image 16.png\",\"Header\":\"Know about\",\"SubHeader\":\"YOUR INDEPENDENT MORTGAGE BROKER IN CALIFORNIA\",\"Description\":\"To make sure all borrowers get the best mortgage rate and loan program with excellent customer service and satisfaction.\"},\"KnowAboutHeader\":\"Tips For Getting A Home Mortgage In California\",\"ChecklistMainHeader\":\"How To Apply For Your Loan\",\"Checklist\":{\"Checklist1\":\"Calculate Loan Rate\",\"Checklist2\":\"Speak With An Expert\",\"Checklist3\":\"Benefit Of Preapproval\",\"Checklist4\":\"Get A Free Quote\"},\"SloganImage\":\"assets/img/finance.png\",\"Slogan\":\"Work With A High-Tech Mortgage Loan Broker\",\"SloganChecklist\":\"Our easy-to-use online tools streamline the mortgage process.\\nGet mortgage estimates, instant rate quotes, and access to our online calculators.\\nLoan applications can be done entirely online(or via fax) on our secure portal.\\nReceive updates about your application – as well as helpful mortgage news – on your phone, tablet or laptop\",\"Testimonials\":[{\"Comment\":\"Thank you for all your help in making the mortgage process go smoothly! my husband and i could n't have done it without you.\",\"Author\":\"Anne Davidson (San Francisco, CA)\"}]}"
                        });
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Stockandbond", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ManualAssetEntryId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ManualAssetEntryId");

                    b.ToTable("Stockandbonds");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicaitonDempgraphicInfoByFinancialInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsEthnicityByObservation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsGenderByObservation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsRaceByObservation")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_dempgraphic_info_by_financial_institutions");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsAgreeAgreement")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_agreements");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationAlternateName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Suffix")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_alternate_names");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CellPhone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Ext")
                        .HasColumnType("longtext");

                    b.Property<string>("HomePhone")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_contact_information");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationCurrentAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressType")
                        .HasColumnType("longtext");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HousingType")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Month")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<long?>("StateId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PersonalInformationId");

                    b.HasIndex("StateId1");

                    b.ToTable("urla_addresses");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationDemographicInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("CanNotProvideEthnicInfo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("CanNotProvideRaceInfo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("CanNotProvideSexInfo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DemographicInfoSource")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsAmericanIndianOrAlaskaNative")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsAsian")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsAsianIndian")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsBlackOrAfricanAmerican")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsChinese")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCuban")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsFemale")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsFilipino")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsGuamanianOrChamorro")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsHispanicOrLatino")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsJapanese")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsKorean")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMale")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMexican")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsNativeHawaiian")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsNativeHawaiianOrOtherPacificIslander")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsNotHispanicOrLatino")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOtherAsian")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOtherHispanicOrLatino")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOtherPacificIslander")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPuertoRican")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsSamoan")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsVietnamese")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsWhite")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("NameOfEnrolledOrPrincipalTribe")
                        .HasColumnType("longtext");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext");

                    b.Property<string>("OtherAsianRace")
                        .HasColumnType("longtext");

                    b.Property<string>("OtherPacificIslanderRace")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_demographic_information");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationEmploymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmploymentType")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEmployedBySomeone")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOwnershipLessThan25")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSelfEmployed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MonthlyIncome")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<decimal>("OwnershipShare")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<string>("StartDate")
                        .HasColumnType("longtext");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<long?>("StateId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext");

                    b.Property<int?>("WorkingMonths")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingYears")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PersonalInformationId");

                    b.HasIndex("StateId1");

                    b.ToTable("urla_employment");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationEmploymentIncomeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("BaseIncome")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Commission")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EmploymentDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MilitaryEntitlements")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Other")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Overtime")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentDetailId");

                    b.ToTable("urla_employment_income");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationIncomeSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IncomeSourceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MonthlyIncome")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncomeSourceId");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_income_sources");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanOriginatorInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Date")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationNmlsrId")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationStateLicenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginatorName")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginatorNmlsrId")
                        .HasColumnType("longtext");

                    b.Property<string>("OriginatorStateLicenseId")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_loan_originator_informations");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("NumberOfUnits")
                        .HasColumnType("int");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<decimal>("PropertyValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<long?>("StateId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<string>("Zip")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PersonalInformationId");

                    b.HasIndex("StateId1");

                    b.ToTable("urla_loan_property_addresses");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyGiftsOrGrants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("AssetTypeId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeposited")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MarketValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId1");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_loan_property_gifts_or_grants");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsManufacturedHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMixedUseProperty")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("LoanPurpose")
                        .HasColumnType("longtext");

                    b.Property<string>("Occupancy")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_loan_property_information");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyOtherNewMortgageLoans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CreditorName")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LienType")
                        .HasColumnType("longtext");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_loan_property_other_new_mortgage_loans");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyRentalIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MonthlyRentalIncome")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("NetMonthlyRentalIncome")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_loan_property_rental_incomes");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationMilitaryService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsCurrentlyRetired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCurrentlyServing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsNonActivatedMember")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsServeUSForces")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsSurvivingSpouse")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectedExpirationServiceDate")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_military_services");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationOtherBorrower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Suffix")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_other_borrowers");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplyingFor")
                        .HasColumnType("longtext");

                    b.Property<string>("BorrowerType")
                        .HasColumnType("longtext");

                    b.Property<string>("Citizenship")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dependents")
                        .HasColumnType("longtext");

                    b.Property<string>("Dob")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MarritalStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<int?>("MortgageApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Suffix")
                        .HasColumnType("longtext");

                    b.Property<int?>("TotalBorrowers")
                        .HasColumnType("int");

                    b.Property<string>("YourInitials")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MortgageApplicationId");

                    b.ToTable("urla_personal_information");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationQuestions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DeclarationQuestionId")
                        .HasColumnType("int");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeclarationQuestionId");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_declaration_questions");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("urla_application");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageFinancialAccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("longtext");

                    b.Property<int?>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("CashMarketValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinancialInstitution")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_financial_assets");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageFinancialCreditType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("CashMarketValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FinancialAssetsTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAssetsTypeId");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_financial_other_assets");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageFinancialLaibilitiesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FinancialLaibilitiesTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPaidBeforeClosing")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnpaidBalance")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("FinancialLaibilitiesTypeId");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_financial_liabilities");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageFinancialOtherLaibilitiesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FinancialOtherLaibilitiesTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialOtherLaibilitiesTypeId");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("urla_financial_other_liabilities");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageLoanOnProperyFinancialInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CreditorName")
                        .HasColumnType("longtext");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPaidBeforeClosing")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MonthlyMortagagePayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("MortgagePropertyFinancialInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<decimal>("UnpaidBalance")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("MortgagePropertyFinancialInformationId");

                    b.ToTable("urla_property_mortgage_loan");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgagePropertyFinancialInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinancialInformationType")
                        .HasColumnType("longtext");

                    b.Property<string>("IntendedOccupancy")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MonthlyInsurance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MonthlyRentalIncome")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("NetMonthlyRentalIncome")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<decimal>("PropertyValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<long?>("StateId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext");

                    b.Property<string>("Zip")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PersonalInformationId");

                    b.HasIndex("StateId1");

                    b.ToTable("urla_property_financial_informations");
                });

            modelBuilder.Entity("LoanManagement.MultiTenancy.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConnectionString")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EditionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("TenancyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("EditionId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenancyName");

                    b.ToTable("AbpTenants");
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.Property<int>("EditionId")
                        .HasColumnType("int");

                    b.HasIndex("EditionId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("EditionFeatureSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("RolePermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasIndex("UserId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("UserPermissionSetting");
                });

            modelBuilder.Entity("Abp.MultiTenancy.TenantFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("TenantFeatureSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Roles.Role", null)
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", null)
                        .WithMany("Settings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Abp.DynamicEntityProperties.DynamicEntityProperty", b =>
                {
                    b.HasOne("Abp.DynamicEntityProperties.DynamicProperty", "DynamicProperty")
                        .WithMany()
                        .HasForeignKey("DynamicPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DynamicProperty");
                });

            modelBuilder.Entity("Abp.DynamicEntityProperties.DynamicEntityPropertyValue", b =>
                {
                    b.HasOne("Abp.DynamicEntityProperties.DynamicEntityProperty", "DynamicEntityProperty")
                        .WithMany()
                        .HasForeignKey("DynamicEntityPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DynamicEntityProperty");
                });

            modelBuilder.Entity("Abp.DynamicEntityProperties.DynamicPropertyValue", b =>
                {
                    b.HasOne("Abp.DynamicEntityProperties.DynamicProperty", "DynamicProperty")
                        .WithMany("DynamicPropertyValues")
                        .HasForeignKey("DynamicPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DynamicProperty");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.HasOne("Abp.EntityHistory.EntityChangeSet", null)
                        .WithMany("EntityChanges")
                        .HasForeignKey("EntityChangeSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityPropertyChange", b =>
                {
                    b.HasOne("Abp.EntityHistory.EntityChange", null)
                        .WithMany("PropertyChanges")
                        .HasForeignKey("EntityChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.HasOne("Abp.Organizations.OrganizationUnit", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Abp.Webhooks.WebhookSendAttempt", b =>
                {
                    b.HasOne("Abp.Webhooks.WebhookEvent", "WebhookEvent")
                        .WithMany()
                        .HasForeignKey("WebhookEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebhookEvent");
                });

            modelBuilder.Entity("LoanManagement.Authorization.Roles.Role", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("LoanManagement.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("LoanManagement.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("DeleterUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("LoanManagement.Authorization.Users.User", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("LoanManagement.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("LoanManagement.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("DeleterUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Additionalincome", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Borrowertype", "BorrowerType")
                        .WithMany("Additionalincomes")
                        .HasForeignKey("BorrowerTypeId");

                    b.HasOne("LoanManagement.codeFirstEntities.Incomesource1", "IncomeSource")
                        .WithMany("Additionalincomes")
                        .HasForeignKey("IncomeSourceId");

                    b.HasOne("LoanManagement.codeFirstEntities.Loanapplication", "LoanApplication")
                        .WithMany("Additionalincomes")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowerType");

                    b.Navigation("IncomeSource");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Address", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Borrowertype", "BorrowerType")
                        .WithMany("Addresses")
                        .HasForeignKey("BorrowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.Personaldetail", "PersonalDetail")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonalDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.State", "State")
                        .WithMany("Addresses")
                        .HasForeignKey("StateId");

                    b.Navigation("BorrowerType");

                    b.Navigation("PersonalDetail");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoanapplicationdocument", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.AdminDisclosure", "Disclosure")
                        .WithMany("AdminLoanapplicationdocuments")
                        .HasForeignKey("DisclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.AdminLoandetail", "Loan")
                        .WithMany("AdminLoanapplicationdocuments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disclosure");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoandetail", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Application", "LoanApplication")
                        .WithMany("AdminLoandetails")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.AdminLoanprogram", "LoanProgram")
                        .WithMany("AdminLoandetails")
                        .HasForeignKey("LoanProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("LoanProgram");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoansummarystatus", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.AdminLoandetail", "Loan")
                        .WithMany("AdminLoansummarystatuses")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.AdminLoanstatus", "Status")
                        .WithMany("AdminLoansummarystatuses")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Application", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.CreditType", "CreditType")
                        .WithMany("Applications")
                        .HasForeignKey("CreditTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditType");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationAdditionalEmployementDetail", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationAdditionalEmployementDetails")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.City", "City")
                        .WithMany("ApplicationAdditionalEmployementDetails")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "Country")
                        .WithMany("ApplicationAdditionalEmployementDetails")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "State")
                        .WithMany("ApplicationAdditionalEmployementDetails")
                        .HasForeignKey("StateId1");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationAdditionalEmployementIncomeDetail", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationAdditionalEmployementDetail", "ApplicationAdditionalEmployementDetailsNavigation")
                        .WithMany("ApplicationAdditionalEmployementIncomeDetails")
                        .HasForeignKey("ApplicationAdditionalEmployementDetailsNavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.IncomeType", "IncomeType")
                        .WithMany("ApplicationAdditionalEmployementIncomeDetails")
                        .HasForeignKey("IncomeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationAdditionalEmployementDetailsNavigation");

                    b.Navigation("IncomeType");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationDeclarationQuestion", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationDeclarationQuestions")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.DeclarationQuestion", "DeclarationQuestion")
                        .WithMany("ApplicationDeclarationQuestions")
                        .HasForeignKey("DeclarationQuestionId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("DeclarationQuestion");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationEmployementDetail", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationEmployementDetails")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.City", "CityId1b43Navigation")
                        .WithMany("ApplicationEmployementDetails")
                        .HasForeignKey("CityId1b43NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "CountryId1b46Navigation")
                        .WithMany("ApplicationEmployementDetails")
                        .HasForeignKey("CountryId1b46NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "StateId1b44Navigation")
                        .WithMany("ApplicationEmployementDetails")
                        .HasForeignKey("StateId1b44NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("CityId1b43Navigation");

                    b.Navigation("CountryId1b46Navigation");

                    b.Navigation("StateId1b44Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationEmployementIncomeDetail", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationEmployementDetail", "ApplicationEmployementDetails")
                        .WithMany("ApplicationEmployementIncomeDetails")
                        .HasForeignKey("ApplicationEmployementDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.IncomeType", "IncomeTypeId1b101Navigation")
                        .WithMany("ApplicationEmployementIncomeDetails")
                        .HasForeignKey("IncomeTypeId1b101NavigationId");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("IncomeTypeId1b101Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialAsset", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialAssets")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.FinancialAccountType", "FinancialAccountTypeId2a1Navigation")
                        .WithMany("ApplicationFinancialAssets")
                        .HasForeignKey("FinancialAccountTypeId2a1NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("FinancialAccountTypeId2a1Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialLaibility", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialLaibilities")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.FinancialLaibilitiesType", "FinancialLaibilitiesType2c1Navigation")
                        .WithMany("ApplicationFinancialLaibilities")
                        .HasForeignKey("FinancialLaibilitiesType2c1NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("FinancialLaibilitiesType2c1Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialOtherAsset", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialOtherAssets")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.FinancialAssetsType", "FinancialAssetsTypesId2b1Navigation")
                        .WithMany("ApplicationFinancialOtherAssets")
                        .HasForeignKey("FinancialAssetsTypesId2b1NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("FinancialAssetsTypesId2b1Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialOtherLaibility", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialOtherLaibilities")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.FinancialOtherLaibilitiesType", "FinancialOtherLaibilitiesTypeId2d1Navigation")
                        .WithMany("ApplicationFinancialOtherLaibilities")
                        .HasForeignKey("FinancialOtherLaibilitiesTypeId2d1NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("FinancialOtherLaibilitiesTypeId2d1Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationFinancialRealEstate", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.City", "CityId3a23Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("CityId3a23NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "CountryId3a26Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("CountryId3a26NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.FinancialPropertyIntendedOccupancy", "FinancialPropertyIntendedOccupancyId3a5Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("FinancialPropertyIntendedOccupancyId3a5NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.FinancialPropertyStatus", "FinancialPropertyStatusId3a4Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("FinancialPropertyStatusId3a4NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "StateId3a24Navigation")
                        .WithMany("ApplicationFinancialRealEstates")
                        .HasForeignKey("StateId3a24NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("CityId3a23Navigation");

                    b.Navigation("CountryId3a26Navigation");

                    b.Navigation("FinancialPropertyIntendedOccupancyId3a5Navigation");

                    b.Navigation("FinancialPropertyStatusId3a4Navigation");

                    b.Navigation("StateId3a24Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationIncomeSource", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationIncomeSources")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.IncomeSource", "IncomeSourceId1e1Navigation")
                        .WithMany("ApplicationIncomeSources")
                        .HasForeignKey("IncomeSourceId1e1NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("IncomeSourceId1e1Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Application", "Application")
                        .WithMany("ApplicationPersonalInformations")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.CitizenshipType", "CitizenshipTypeId1a5Navigation")
                        .WithMany("ApplicationPersonalInformations")
                        .HasForeignKey("CitizenshipTypeId1a5NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.City", "CurrentCityId1a133Navigation")
                        .WithMany()
                        .HasForeignKey("CurrentCityId1a133NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "CurrentCountryId1a136Navigation")
                        .WithMany()
                        .HasForeignKey("CurrentCountryId1a136NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.HousingType", "CurrentHousingTypeId1a141Navigation")
                        .WithMany()
                        .HasForeignKey("CurrentHousingTypeId1a141NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "CurrentStateId1a134Navigation")
                        .WithMany()
                        .HasForeignKey("CurrentStateId1a134NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.City", "FormerCityId1a153Navigation")
                        .WithMany()
                        .HasForeignKey("FormerCityId1a153NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "FormerCountryId1a156Navigation")
                        .WithMany()
                        .HasForeignKey("FormerCountryId1a156NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.HousingType", "FormerHousingTypeId1a161Navigation")
                        .WithMany()
                        .HasForeignKey("FormerHousingTypeId1a161NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "FormerStateId1a154Navigation")
                        .WithMany()
                        .HasForeignKey("FormerStateId1a154NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.City", "MailingCityId1a173Navigation")
                        .WithMany()
                        .HasForeignKey("MailingCityId1a173NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "MailingCountryId1a176Navigation")
                        .WithMany()
                        .HasForeignKey("MailingCountryId1a176NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "MailingStateId1a174Navigation")
                        .WithMany()
                        .HasForeignKey("MailingStateId1a174NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.MaritialStatus", "MaritialStatusId1a7Navigation")
                        .WithMany("ApplicationPersonalInformations")
                        .HasForeignKey("MaritialStatusId1a7NavigationId");

                    b.Navigation("Application");

                    b.Navigation("CitizenshipTypeId1a5Navigation");

                    b.Navigation("CurrentCityId1a133Navigation");

                    b.Navigation("CurrentCountryId1a136Navigation");

                    b.Navigation("CurrentHousingTypeId1a141Navigation");

                    b.Navigation("CurrentStateId1a134Navigation");

                    b.Navigation("FormerCityId1a153Navigation");

                    b.Navigation("FormerCountryId1a156Navigation");

                    b.Navigation("FormerHousingTypeId1a161Navigation");

                    b.Navigation("FormerStateId1a154Navigation");

                    b.Navigation("MailingCityId1a173Navigation");

                    b.Navigation("MailingCountryId1a176Navigation");

                    b.Navigation("MailingStateId1a174Navigation");

                    b.Navigation("MaritialStatusId1a7Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationPreviousEmployementDetail", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("ApplicationPreviousEmployementDetails")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.City", "CityId1d33Navigation")
                        .WithMany("ApplicationPreviousEmployementDetails")
                        .HasForeignKey("CityId1d33NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "CountryId1d36Navigation")
                        .WithMany("ApplicationPreviousEmployementDetails")
                        .HasForeignKey("CountryId1d36NavigationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "StateId1d34Navigation")
                        .WithMany("ApplicationPreviousEmployementDetails")
                        .HasForeignKey("StateId1d34NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("CityId1d33Navigation");

                    b.Navigation("CountryId1d36Navigation");

                    b.Navigation("StateId1d34Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Borrower", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Borrowertype", "BorrowerType")
                        .WithMany("Borrowers")
                        .HasForeignKey("BorrowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowerType");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Borroweremploymentinformation", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Borrowertype", "BorrowerType")
                        .WithMany("Borroweremploymentinformations")
                        .HasForeignKey("BorrowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.Loanapplication", "LoanApplication")
                        .WithMany("Borroweremploymentinformations")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowerType");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Borrowermonthlyincome", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Borrowertype", "BorrowerType")
                        .WithMany("Borrowermonthlyincomes")
                        .HasForeignKey("BorrowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.Loanapplication", "LoanApplication")
                        .WithMany("Borrowermonthlyincomes")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowerType");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.City", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId1");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.CountryState", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Country", "Country")
                        .WithMany("CountryStates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Declaration", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Borrowertype", "BorrowerType")
                        .WithMany("Declarations")
                        .HasForeignKey("BorrowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.Loanapplication", "LoanApplication")
                        .WithMany("Declarations")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowerType");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Declarationborroweredemographicsinformation", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Borrowertype", "BorrowerType")
                        .WithMany("Declarationborroweredemographicsinformations")
                        .HasForeignKey("BorrowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.Loanapplication", "LoanApplication")
                        .WithMany("Declarationborroweredemographicsinformations")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowerType");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DeclarationQuestion", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.DeclarationCategory", "DeclarationCategory")
                        .WithMany("DeclarationQuestions")
                        .HasForeignKey("DeclarationCategoryId");

                    b.Navigation("DeclarationCategory");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DemographicInformation", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", "ApplicationPersonalInformation")
                        .WithMany("DemographicInformations")
                        .HasForeignKey("ApplicationPersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.DemographicInfoSource", "DemographicInfoSourceId87Navigation")
                        .WithMany("DemographicInformations")
                        .HasForeignKey("DemographicInfoSourceId87NavigationId");

                    b.Navigation("ApplicationPersonalInformation");

                    b.Navigation("DemographicInfoSourceId87Navigation");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Loanapplication", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Additionaldetail", "AdditionalDetail")
                        .WithMany("Loanapplications")
                        .HasForeignKey("AdditionalDetailId");

                    b.HasOne("LoanManagement.codeFirstEntities.Consentdetail", "ConsentDetail")
                        .WithMany("Loanapplications")
                        .HasForeignKey("ConsentDetailId");

                    b.HasOne("LoanManagement.codeFirstEntities.Creditauthagreement", "CreditAuthAgreement")
                        .WithMany("Loanapplications")
                        .HasForeignKey("CreditAuthAgreementId");

                    b.HasOne("LoanManagement.codeFirstEntities.Expense", "Expense")
                        .WithMany("Loanapplications")
                        .HasForeignKey("ExpenseId");

                    b.HasOne("LoanManagement.codeFirstEntities.Loandetail", "LoanDetail")
                        .WithMany("Loanapplications")
                        .HasForeignKey("LoanDetailId");

                    b.HasOne("LoanManagement.codeFirstEntities.Personaldetail", "PersonalDetail")
                        .WithOne("Loanapplication")
                        .HasForeignKey("LoanManagement.codeFirstEntities.Loanapplication", "PersonalDetailId");

                    b.Navigation("AdditionalDetail");

                    b.Navigation("ConsentDetail");

                    b.Navigation("CreditAuthAgreement");

                    b.Navigation("Expense");

                    b.Navigation("LoanDetail");

                    b.Navigation("PersonalDetail");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Manualassetentry", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Assettype", "AssetType")
                        .WithMany("Manualassetentries")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.Borrowertype", "BorrowerType")
                        .WithMany("Manualassetentries")
                        .HasForeignKey("BorrowerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.Loanapplication", "LoanApplication")
                        .WithMany("Manualassetentries")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.codeFirstEntities.State", "State")
                        .WithMany("Manualassetentries")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");

                    b.Navigation("BorrowerType");

                    b.Navigation("LoanApplication");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Personaldetail", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Borrower", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId");

                    b.HasOne("LoanManagement.codeFirstEntities.Borrower", "CoBorrower")
                        .WithMany()
                        .HasForeignKey("CoBorrowerId");

                    b.Navigation("Borrower");

                    b.Navigation("CoBorrower");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Stockandbond", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Manualassetentry", "ManualAssetEntry")
                        .WithMany("Stockandbonds")
                        .HasForeignKey("ManualAssetEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManualAssetEntry");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicaitonDempgraphicInfoByFinancialInstitution", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationAgreement", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationAlternateName", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationContactInformation", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationCurrentAddress", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "State")
                        .WithMany()
                        .HasForeignKey("StateId1");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("PersonalInformation");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationDemographicInformation", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationEmploymentDetail", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "State")
                        .WithMany()
                        .HasForeignKey("StateId1");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("PersonalInformation");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationEmploymentIncomeDetail", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationEmploymentDetail", "EmploymentDetail")
                        .WithMany()
                        .HasForeignKey("EmploymentDetailId");

                    b.Navigation("EmploymentDetail");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationIncomeSource", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.IncomeSource", "IncomeSource")
                        .WithMany()
                        .HasForeignKey("IncomeSourceId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("IncomeSource");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanOriginatorInformation", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyAddress", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "State")
                        .WithMany()
                        .HasForeignKey("StateId1");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("PersonalInformation");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyGiftsOrGrants", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.Assettype", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId1");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("AssetType");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyInformation", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyOtherNewMortgageLoans", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationLoanPropertyRentalIncome", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationMilitaryService", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationOtherBorrower", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgageApplications", "MortgageApplication")
                        .WithMany()
                        .HasForeignKey("MortgageApplicationId");

                    b.Navigation("MortgageApplication");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageApplicationQuestions", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.DeclarationQuestion", "DeclarationQuestion")
                        .WithMany()
                        .HasForeignKey("DeclarationQuestionId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("DeclarationQuestion");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageFinancialAccountType", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.FinancialAccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("AccountType");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageFinancialCreditType", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.FinancialAssetsType", "FinancialAssetsType")
                        .WithMany()
                        .HasForeignKey("FinancialAssetsTypeId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("FinancialAssetsType");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageFinancialLaibilitiesType", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.FinancialLaibilitiesType", "FinancialLaibilitiesType")
                        .WithMany()
                        .HasForeignKey("FinancialLaibilitiesTypeId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("FinancialLaibilitiesType");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageFinancialOtherLaibilitiesType", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.FinancialOtherLaibilitiesType", "FinancialOtherLaibilitiesType")
                        .WithMany()
                        .HasForeignKey("FinancialOtherLaibilitiesTypeId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("FinancialOtherLaibilitiesType");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgageLoanOnProperyFinancialInformation", b =>
                {
                    b.HasOne("LoanManagement.MortgageTables.MortgagePropertyFinancialInformation", "MortgagePropertyFinancialInformation")
                        .WithMany()
                        .HasForeignKey("MortgagePropertyFinancialInformationId");

                    b.Navigation("MortgagePropertyFinancialInformation");
                });

            modelBuilder.Entity("LoanManagement.MortgageTables.MortgagePropertyFinancialInformation", b =>
                {
                    b.HasOne("LoanManagement.codeFirstEntities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("LoanManagement.codeFirstEntities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("LoanManagement.MortgageTables.MortgageApplicationPersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.HasOne("LoanManagement.codeFirstEntities.CountryState", "State")
                        .WithMany()
                        .HasForeignKey("StateId1");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("PersonalInformation");

                    b.Navigation("State");
                });

            modelBuilder.Entity("LoanManagement.MultiTenancy.Tenant", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("LoanManagement.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId");

                    b.HasOne("LoanManagement.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("DeleterUser");

                    b.Navigation("Edition");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edition");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Roles.Role", null)
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasOne("LoanManagement.Authorization.Users.User", null)
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.DynamicEntityProperties.DynamicProperty", b =>
                {
                    b.Navigation("DynamicPropertyValues");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.Navigation("PropertyChanges");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChangeSet", b =>
                {
                    b.Navigation("EntityChanges");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("LoanManagement.Authorization.Roles.Role", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("LoanManagement.Authorization.Users.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Permissions");

                    b.Navigation("Roles");

                    b.Navigation("Settings");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Additionaldetail", b =>
                {
                    b.Navigation("Loanapplications");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminDisclosure", b =>
                {
                    b.Navigation("AdminLoanapplicationdocuments");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoandetail", b =>
                {
                    b.Navigation("AdminLoanapplicationdocuments");

                    b.Navigation("AdminLoansummarystatuses");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoanprogram", b =>
                {
                    b.Navigation("AdminLoandetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.AdminLoanstatus", b =>
                {
                    b.Navigation("AdminLoansummarystatuses");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Application", b =>
                {
                    b.Navigation("AdminLoandetails");

                    b.Navigation("ApplicationPersonalInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationAdditionalEmployementDetail", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationEmployementDetail", b =>
                {
                    b.Navigation("ApplicationEmployementIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.ApplicationPersonalInformation", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementDetails");

                    b.Navigation("ApplicationDeclarationQuestions");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("ApplicationFinancialAssets");

                    b.Navigation("ApplicationFinancialLaibilities");

                    b.Navigation("ApplicationFinancialOtherAssets");

                    b.Navigation("ApplicationFinancialOtherLaibilities");

                    b.Navigation("ApplicationFinancialRealEstates");

                    b.Navigation("ApplicationIncomeSources");

                    b.Navigation("ApplicationPreviousEmployementDetails");

                    b.Navigation("DemographicInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Assettype", b =>
                {
                    b.Navigation("Manualassetentries");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Borrowertype", b =>
                {
                    b.Navigation("Additionalincomes");

                    b.Navigation("Addresses");

                    b.Navigation("Borroweremploymentinformations");

                    b.Navigation("Borrowermonthlyincomes");

                    b.Navigation("Borrowers");

                    b.Navigation("Declarationborroweredemographicsinformations");

                    b.Navigation("Declarations");

                    b.Navigation("Manualassetentries");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.CitizenshipType", b =>
                {
                    b.Navigation("ApplicationPersonalInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.City", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementDetails");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("ApplicationFinancialRealEstates");

                    b.Navigation("ApplicationPreviousEmployementDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Consentdetail", b =>
                {
                    b.Navigation("Loanapplications");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Country", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementDetails");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("ApplicationFinancialRealEstates");

                    b.Navigation("ApplicationPreviousEmployementDetails");

                    b.Navigation("CountryStates");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.CountryState", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementDetails");

                    b.Navigation("ApplicationEmployementDetails");

                    b.Navigation("ApplicationFinancialRealEstates");

                    b.Navigation("ApplicationPreviousEmployementDetails");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Creditauthagreement", b =>
                {
                    b.Navigation("Loanapplications");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.CreditType", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DeclarationCategory", b =>
                {
                    b.Navigation("DeclarationQuestions");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DeclarationQuestion", b =>
                {
                    b.Navigation("ApplicationDeclarationQuestions");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.DemographicInfoSource", b =>
                {
                    b.Navigation("DemographicInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Expense", b =>
                {
                    b.Navigation("Loanapplications");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialAccountType", b =>
                {
                    b.Navigation("ApplicationFinancialAssets");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialAssetsType", b =>
                {
                    b.Navigation("ApplicationFinancialOtherAssets");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialLaibilitiesType", b =>
                {
                    b.Navigation("ApplicationFinancialLaibilities");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialOtherLaibilitiesType", b =>
                {
                    b.Navigation("ApplicationFinancialOtherLaibilities");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialPropertyIntendedOccupancy", b =>
                {
                    b.Navigation("ApplicationFinancialRealEstates");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.FinancialPropertyStatus", b =>
                {
                    b.Navigation("ApplicationFinancialRealEstates");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.IncomeSource", b =>
                {
                    b.Navigation("ApplicationIncomeSources");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Incomesource1", b =>
                {
                    b.Navigation("Additionalincomes");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.IncomeType", b =>
                {
                    b.Navigation("ApplicationAdditionalEmployementIncomeDetails");

                    b.Navigation("ApplicationEmployementIncomeDetails");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Loanapplication", b =>
                {
                    b.Navigation("Additionalincomes");

                    b.Navigation("Borroweremploymentinformations");

                    b.Navigation("Borrowermonthlyincomes");

                    b.Navigation("Declarationborroweredemographicsinformations");

                    b.Navigation("Declarations");

                    b.Navigation("Manualassetentries");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Loandetail", b =>
                {
                    b.Navigation("Loanapplications");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Manualassetentry", b =>
                {
                    b.Navigation("Stockandbonds");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.MaritialStatus", b =>
                {
                    b.Navigation("ApplicationPersonalInformations");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.Personaldetail", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Loanapplication");
                });

            modelBuilder.Entity("LoanManagement.codeFirstEntities.State", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Manualassetentries");
                });
#pragma warning restore 612, 618
        }
    }
}
